import { useState } from 'react';
import React, { useContext } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Swiper, SwiperSlide } from 'swiper/react';
import 'swiper/swiper-bundle.css';
import useEcontOffices from '../../hooks/useEcontOffices';  
import useSaveOrder from "../../hooks/useSaveOrder";
import './ProductDetails.css';
import Saturn from '../Products/luminis saturn.png';
import Heart from '../Products/luminis heart.png';
import MilkyWay from '../Products/luminis milky way.png';
import Earth from '../Products/luminis earth.png';
import Perla11 from '../Products/Perla11.png';
import Perla12 from '../Products/Perla12.png';
import Perla13 from '../Products/Perla13.png';
import { CartContext } from '../contexts/CartContext'; 

const products = [
    { id: 9, name: 'Luminis Saturn', oldPrice: '35.99 –ª–≤', price: '29.99 –ª–≤', imageUrl: [Saturn], description: `
                        Luminis Saturn –µ –∏–∑—è—â–Ω–∞ —Å–≤–µ—Ç–µ—â–∞ –∫—Ä–∏—Å—Ç–∞–ª–Ω–∞ —Å—Ñ–µ—Ä–∞ —Å –¥–∏–∞–º–µ—Ç—ä—Ä 6 —Å–º, –≤–¥—ä—Ö–Ω–æ–≤–µ–Ω–∞ –æ—Ç –º–∏—Å—Ç–∏—á–Ω–∞—Ç–∞ –∫—Ä–∞—Å–æ—Ç–∞ –Ω–∞ –°–∞—Ç—É—Ä–Ω. 
                        –ò–∑—Ä–∞–±–æ—Ç–µ–Ω–∞ –æ—Ç –≤–∏—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω –∫—Ä–∏—Å—Ç–∞–ª, —Ç—è –∏–∑–ª—ä—á–≤–∞ –º–µ–∫–æ —Å–∏—è–Ω–∏–µ, —Å—ä–∑–¥–∞–≤–∞–π–∫–∏ –∑–∞–≤–ª–∞–¥—è–≤–∞—â–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤—ä–≤ –≤—Å—è–∫–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ. 
                        –°—ä—Å —Å–≤–æ—è –µ–ª–µ–≥–∞–Ω—Ç–µ–Ω –¥–∏–∑–∞–π–Ω –∏ –µ—Ñ–µ–∫—Ç–µ–Ω –±–ª—è—Å—ä–∫, —Ç–∞–∑–∏ —Å—Ñ–µ—Ä–∞ –µ –ø–µ—Ä—Ñ–µ–∫—Ç–µ–Ω –∏–∑–±–æ—Ä –∑–∞ –¥–µ–∫–æ—Ä–∞—Ü–∏—è 
                        —É –¥–æ–º–∞, –≤ –æ—Ñ–∏—Å–∞ –∏–ª–∏ –∫–∞—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–µ–Ω –ø–æ–¥–∞—Ä—ä–∫ –∑–∞ –ª—é–±–∏—Ç–µ–ª–∏—Ç–µ –Ω–∞ –∫–æ—Å–º–æ—Å–∞ –∏ –∏–∑–∏—Å–∫–∞–Ω–∞—Ç–∞ –µ—Å—Ç–µ—Ç–∏–∫–∞.‚ú®` },
    { id: 10, name: 'Luminis Milky Way', oldPrice: '35.99 –ª–≤', price: '29.99 –ª–≤', imageUrl: [MilkyWay], description: `
                        Luminis Milky Way –µ —É–Ω–∏–∫–∞–ª–Ω–∞ —Å–≤–µ—Ç–µ—â–∞ –∫—Ä–∏—Å—Ç–∞–ª–Ω–∞ —Å—Ñ–µ—Ä–∞ —Å –¥–∏–∞–º–µ—Ç—ä—Ä 6 —Å–º, –≤–¥—ä—Ö–Ω–æ–≤–µ–Ω–∞ –æ—Ç –º–∞–≥–∏—è—Ç–∞ –Ω–∞ –ú–ª–µ—á–Ω–∏—è –ø—ä—Ç. 
                        –°—ä–∑–¥–∞–¥–µ–Ω–∞ –¥–∞ –æ—Ç—Ä–∞–∑—è–≤–∞ —Å–≤–µ—Ç–ª–∏–Ω–∞—Ç–∞ –ø–æ –≤–ø–µ—á–∞—Ç–ª—è–≤–∞—â –Ω–∞—á–∏–Ω, —Ç—è —Å—ä–∑–¥–∞–≤–∞ —É—Å–µ—â–∞–Ω–µ –∑–∞ –±–µ–∑–∫—Ä–∞–π–Ω–æ—Å—Ç –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ.
                        –ü–æ–¥—Ö–æ–¥—è—â–∞ –∫–∞–∫—Ç–æ –∑–∞ –∏–Ω—Ç–µ—Ä–∏–æ—Ä–Ω–∞ –¥–µ–∫–æ—Ä–∞—Ü–∏—è, —Ç–∞–∫–∞ –∏ –∑–∞ –º–µ–¥–∏—Ç–∞—Ü–∏—è –∏–ª–∏ –µ–Ω–µ—Ä–≥–∏–π–Ω–æ –±–∞–ª–∞–Ω—Å–∏—Ä–∞–Ω–µ, 
                        —Ç–∞–∑–∏ —Å—Ñ–µ—Ä–∞ –µ –∏–¥–µ–∞–ª–µ–Ω –ø–æ–¥–∞—Ä—ä–∫ –∑–∞ –≤—Å–∏—á–∫–∏, –∫–æ–∏—Ç–æ –æ–±–∏—á–∞—Ç –º–∏—Å—Ç–µ—Ä–∏—è—Ç–∞ –Ω–∞ –∫–æ—Å–º–æ—Å–∞.‚ú®` },
    { id: 11, name: 'Luminis Earth', oldPrice: '35.99 –ª–≤', price: '29.99 –ª–≤', imageUrl: [Earth], description: `
                        Luminis Earth –µ –∫—Ä–∏—Å—Ç–∞–ª–Ω–∞ —Å—Ñ–µ—Ä–∞ —Å –Ω–µ–∂–Ω–æ —Å–∏—è–Ω–∏–µ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–∞ –∫—Ä–∞—Å–æ—Ç–∞, –≤–¥—ä—Ö–Ω–æ–≤–µ–Ω–∞ –æ—Ç –Ω–∞—à–∞—Ç–∞ –ø–ª–∞–Ω–µ—Ç–∞. 
                        –° –¥–∏–∞–º–µ—Ç—ä—Ä 6 —Å–º, —Ç—è –∫–æ–º–±–∏–Ω–∏—Ä–∞ —Å—Ç–∏–ª –∏ —Ö–∞—Ä–º–æ–Ω–∏—è, –∫–∞—Ç–æ —Å—ä–∑–¥–∞–≤–∞ –±–∞–ª–∞–Ω—Å–∏—Ä–∞–Ω–∞ –∏ —Ç–æ–ø–ª–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ –¥–æ–º–∞ –∏–ª–∏ –æ—Ñ–∏—Å–∞. 
                        –ù–µ–π–Ω–∏—è—Ç –º–µ–∫ –±–ª—è—Å—ä–∫ –ø—Ä–∏–¥–∞–≤–∞ —É—Å–µ—â–∞–Ω–µ –∑–∞ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –≤—Ä—ä–∑–∫–∞ —Å –ø—Ä–∏—Ä–æ–¥–∞—Ç–∞, –ø—Ä–∞–≤–µ–π–∫–∏ —è –ø–µ—Ä—Ñ–µ–∫—Ç–µ–Ω –ø–æ–¥–∞—Ä—ä–∫ –∑–∞ –ª—é–±–∏—Ç–µ–ª–∏—Ç–µ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–∏—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∏ –∏ –µ—Å—Ç–µ—Ç–∏–∫–∞—Ç–∞.‚ú®` },
    { id: 12, name: 'Luminis Heart', oldPrice: '35.99 –ª–≤', price: '29.99 –ª–≤', imageUrl: [Heart], description: `
                        Luminis Heart –µ –∏–∑—è—â–Ω–∞ —Å–≤–µ—Ç–µ—â–∞ –∫—Ä–∏—Å—Ç–∞–ª–Ω–∞ —Å—Ñ–µ—Ä–∞ —Å –¥–∏–∞–º–µ—Ç—ä—Ä 6 —Å–º, —Å—ä–∑–¥–∞–¥–µ–Ω–∞ –¥–∞ –∏–∑–ª—ä—á–≤–∞ —Ç–æ–ø–ª–∏–Ω–∞ –∏ –µ–º–æ—Ü–∏—è. 
                        –í–¥—ä—Ö–Ω–æ–≤–µ–Ω–∞ –æ—Ç –µ–Ω–µ—Ä–≥–∏—è—Ç–∞ –Ω–∞ –ª—é–±–æ–≤—Ç–∞ –∏ —Ö–∞—Ä–º–æ–Ω–∏—è—Ç–∞, —Ç—è –Ω–µ–∂–Ω–æ –æ—Ç—Ä–∞–∑—è–≤–∞ —Å–≤–µ—Ç–ª–∏–Ω–∞—Ç–∞, —Å—ä–∑–¥–∞–≤–∞–π–∫–∏ —É—é—Ç–Ω–∞ –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞. 
                        –ü–µ—Ä—Ñ–µ–∫—Ç–Ω–∞ –∫–∞—Ç–æ –¥–µ–∫–æ—Ä–∞—Ü–∏—è –∑–∞ –¥–æ–º–∞, –∫–∞—Ç–æ —Å–∏–º–≤–æ–ª –Ω–∞ –µ–º–æ—Ü–∏–æ–Ω–∞–ª–Ω–∞ –≤—Ä—ä–∑–∫–∞ –∏–ª–∏ –∫–∞—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–µ–Ω –ø–æ–¥–∞—Ä—ä–∫ –∑–∞ –ª—é–±–∏–º —á–æ–≤–µ–∫. 
                        –î–æ–±–∞–≤–µ—Ç–µ –Ω–æ—Ç–∫–∞ –Ω–∞ –Ω–µ–∂–Ω–æ—Å—Ç –∏ —Å–∏—è–Ω–∏–µ –∫—ä–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ—Ç–æ —Å–∏ —Å Luminis Heart ‚Äì —Å–≤–µ—Ç–ª–∏–Ω–∞—Ç–∞, –∫–æ—è—Ç–æ –≥–æ–≤–æ—Ä–∏ —Å—ä—Å —Å—ä—Ä—Ü–µ—Ç–æ! ‚ù§Ô∏è‚ú®` },
    { id: 13, name: '–ö–æ–ª–∏–µ —Å –ø–µ—Ä–ª–∞ –≤ –º–∏–¥–∞', oldPrice: '25.99 –ª–≤', price: '17.99 –ª–≤', imageUrl: [Perla11, Perla12, Perla13], description: `
                        –ö–æ–ª–∏–µ —Å –ø–µ—Ä–ª–∞ –≤ –º–∏–¥–∞ ‚Äì –ï–ª–µ–≥–∞–Ω—Ç–Ω–æ –∏ –∏–∑–∏—Å–∫–∞–Ω–æ –±–∏–∂—É, –∫–æ–µ—Ç–æ —Å—ä—á–µ—Ç–∞–≤–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–∞ –∫—Ä–∞—Å–æ—Ç–∞ –∏ —Å–∏–º–≤–æ–ª–∏–∫–∞. 
                        –í—Å—è–∫–∞ –º–∏–¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –∞–≤—Ç–µ–Ω—Ç–∏—á–Ω–∞ –ø–µ—Ä–ª–∞, –∫–æ—è—Ç–æ —Ä–∞–∑–∫—Ä–∏–≤–∞ —Å–≤–æ—è —É–Ω–∏–∫–∞–ª–µ–Ω —Ü–≤—è—Ç –ø—Ä–∏ –æ—Ç–≤–∞—Ä—è–Ω–µ. 
                        –ò–¥–µ–∞–ª–µ–Ω –ø–æ–¥–∞—Ä—ä–∫ –∑–∞ —Å–ø–µ—Ü–∏–∞–ª–µ–Ω —á–æ–≤–µ–∫, —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä–∞—â —á–∏—Å—Ç–æ—Ç–∞, –ª—é–±–æ–≤ –∏ –∫—ä—Å–º–µ—Ç. 
                        –ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ —Å —Ñ–∏–Ω —Å–∏–Ω–¥–∂–∏—Ä, –¥–æ–ø—ä–ª–≤–∞—â –Ω–µ–∂–Ω–∏—è –∏ —Å—Ç–∏–ª–µ–Ω –¥–∏–∑–∞–π–Ω.ü¶™‚ú®` }
];

const ProductDetails = () => {
    const navigate = useNavigate();
    const { id } = useParams();
    const product = products.find(p => p.id === parseInt(id));
    const [quantity, setQuantity] = useState(1); 
    
    const [isAdded, setIsAdded] = useState(false);
    const [isOrdered, setIsOrdered] = useState(false);
    const [cantAddZero, cantAddZeroToCart] = useState(false);

    const [showModal, setShowModal] = useState(false);

    const [isDescriptionOpen, setIsDescriptionOpen] = useState(false);
    
    const [cityFilter, setCityFilter] = useState('');

    const { offices } = useEcontOffices();

    const toggleDescription = () => {
        setIsDescriptionOpen(!isDescriptionOpen);
    };

    const handleOrderClick = () => {
        setShowModal(true); 
    };

    const handleCloseModal = () => {
        setShowModal(false); 
    };

    const [formData, setFormData] = useState({
        firstName: '',
        lastName: '',
        phone: '',
        address: '',
        city: '',
        postalCode: '',
        country: '',
        order: product.name,
        quantity: 1,
        additionalInfo: '',
        option: product.option
    });

    const handleChange = (e) => {
        const { name, value } = e.target;
    
        setFormData((prevFormData) => ({
            ...prevFormData,
            [name]: value,  
            ...(name === "office" && { address: value }) 
        }));
    };

    const handleCityFilterChange = (e) => {
        setCityFilter(e.target.value);
    };

    const filteredOffices = offices.filter((office) => {
        const fullAddress = office.address?.fullAddress?.toLowerCase().trim() || "";
        const searchInput = cityFilter.toLowerCase().trim();
        
        return fullAddress.includes(searchInput);
    });

    const { submitOrder } = useSaveOrder();
    
    const handleSubmit = async (e) => {
        e.preventDefault();
        const orderItems = [{ id: product.id, name: product.name, quantity: formData.quantity, option: product.option, price: product.price }];
        await submitOrder(formData, orderItems, cityFilter);
        handleCloseModal();
        handleSubmitFastOrder(product);
    };

    const { addToCart } = useContext(CartContext); 

    const handleSubmitFastOrder = () =>{
        setIsOrdered(true);

        setTimeout(() => {
            setIsOrdered(false);
            navigate("/"); 
        }, 5000);
    }
    
    const handleQuantityChange = (e) => {
        const value = parseInt(e.target.value, 10);
        // if (value > 0) {
            setQuantity(value); // –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –±—Ä–æ–π–∫–∞—Ç–∞ —Å–∞–º–æ –∞–∫–æ –µ –ø–æ-–≥–æ–ª—è–º–æ –æ—Ç 0
        // }
    };

    const handleAddToCart = (product, quantity, value) => {
        if (product.id === 7 && !value) {
            alert('–ú–æ–ª—è, –∏–∑–±–µ—Ä–µ—Ç–µ –æ–ø—Ü–∏—è –ø—Ä–µ–¥–∏ –¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ —Ç–æ–∑–∏ –ø—Ä–æ–¥—É–∫—Ç –≤ –∫–æ–ª–∏—á–∫–∞—Ç–∞.');
            return;
        }

        addToCart(product, quantity, value); 

        if (quantity > 0) {
            setIsAdded(true);
        } else if (quantity === 0) {
            cantAddZeroToCart(true);
        }

        setTimeout(() => {
            cantAddZeroToCart(false);
            setIsAdded(false);
        }, 1500);
    };

    if (!product) {
        return <h2>–ü—Ä–æ–¥—É–∫—Ç—ä—Ç –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω</h2>;
    }

    return (
        <section id="products" className="product-details-section">
            <Swiper
                spaceBetween={10}
                slidesPerView={1}
                navigation
                loop
                className="swiper-container" 
            >
                {product.imageUrl.map((image, index) => (
                    <SwiperSlide key={index} className="swiper-slide">
                        <img
                            src={image}
                            alt={`Product ${index + 1}`}
                            className="product-image"
                        />
                    </SwiperSlide>
                ))}
            </Swiper>

            <div className="product-details">
            <h2>{product.name}</h2>
                <p className="old-price">–°—Ç–∞—Ä–∞ –¶–µ–Ω–∞: {product.oldPrice}</p>
                <p className="product-price">–¶–µ–Ω–∞: {product.price}</p>

                <label className='product-quantity-input-label'>
                    <input className="product-quantity-input"
                        type="number"
                        value={quantity}
                        onChange={handleQuantityChange}
                        min="1"
                        style={{ width: '50px', marginLeft: '0px' }}
                    />
                </label>
                
                {product.id === 7 && (
                    <label className="product-options-dropdown-label">
                        <select 
                            className="product-options-dropdown" 
                            value={formData.option || ''} 
                            onChange={(e) => 
                                setFormData({ ...formData, option: e.target.value })
                            }
                            required
                        >
                            <option value="" disabled>–ò–∑–±–µ—Ä–µ—Ç–µ –æ–ø—Ü–∏—è</option>
                            <option value="–ê—Ä–∏–µ–ª –∏ –ï—Ä–∏–∫">–ê—Ä–∏–µ–ª –∏ –ï—Ä–∏–∫</option>
                            <option value="–®—Ä–µ–∫ –∏ –§–∏–æ–Ω–∞">–®—Ä–µ–∫ –∏ –§–∏–æ–Ω–∞</option>
                            <option value="–ù–∞–ª–∞ –∏ –°–∏–º–±–∞">–ù–∞–ª–∞ –∏ –°–∏–º–±–∞</option>
                            <option value="–ë–µ–ª –∏ –ó–≤—è—Ä">–ë–µ–ª –∏ –ó–≤—è—Ä</option>
                            <option value="–†–∞–ø—É–Ω—Ü–µ–ª –∏ –§–ª–∏–Ω">–†–∞–ø—É–Ω—Ü–µ–ª –∏ –§–ª–∏–Ω</option>
                            <option value="–ë—ä–≥—Å –∏ –õ–æ–ª–∞">–ë—ä–≥—Å –∏ –õ–æ–ª–∞</option>
                        </select>
                    </label>
                )}

                <div className="product-buttons">
                    <button className="order-button" onClick={() => handleAddToCart(product, quantity, formData.option)}>–î–æ–±–∞–≤–∏ –≤ –∫–æ–ª–∏—á–∫–∞—Ç–∞</button>
                    <button className="order-button" onClick={handleOrderClick}>–ë—ä—Ä–∑–∞ –ø–æ—Ä—ä—á–∫–∞</button>
                </div>

                <div className="product-description">
                    <div onClick={toggleDescription} className="description-toggle">
                        –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ {isDescriptionOpen ? "‚ñ≤" : "‚ñº"}
                    </div>
                    {isDescriptionOpen && <p className="description-text">{product.description}</p>}
                </div>

            </div>

            {isAdded && (
                <div className="modal">
                    <div className="modal-content">
                        <p>
                            –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–µ–Ω–æ –≤ –∫–æ–ª–∏—á–∫–∞—Ç–∞!
                        </p>
                    </div>
                </div>
            )}

            {cantAddZero && (
                <div className="modal">
                    <div className="modal-content">
                        <p>
                            –ù–µ –º–æ–∂–µ –¥–∞ –¥–æ–±–∞–≤—è—Ç–µ 0 –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ–ª–∏—á–∫–∞—Ç–∞!
                        </p>
                    </div>
                </div>
            )}

             {isOrdered && (
                <div className="modal">
                    <div className="modal-content">
                        <p>
                            –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ—Ä—ä—á–∫–∞—Ç–∞! –û—á–∞–∫–≤–∞–π—Ç–µ –¥–∞ —Å–µ —Å–≤—ä—Ä–∂–µ–º —Å –í–∞—Å –∑–∞ –ø–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 3 —Ä–∞–±–æ—Ç–Ω–∏ –¥–Ω–∏.
                        </p>
                    </div>
                </div>
            )}
            
            {showModal && (
                <div className="modal">
                    <div className="modal-content">
                        <span className="close" onClick={handleCloseModal}> &times;{/*times;*/}</span>
                        <form  onSubmit={handleSubmit} className="order-form">
                        <div className="form-group">
                                <label>
                                    –ò–º–µ:
                                    <input 
                                        type="text" 
                                        name="firstName" 
                                        value={formData.firstName} 
                                        onChange={handleChange} 
                                        required 
                                        />
                                </label>
                                <label>
                                    –§–∞–º–∏–ª–∏—è:
                                    <input 
                                        type="text" 
                                        name="lastName" 
                                        value={formData.lastName} 
                                        onChange={handleChange} 
                                        required 
                                        />
                                </label>
                                <label>
                                    –¢–µ–ª–µ—Ñ–æ–Ω:
                                    <input
                                        type="text"
                                        name="phone"
                                        value={formData.phone}
                                        onChange={handleChange}
                                        required
                                    />
                                </label>
                                <label>
                                    –ë—Ä–æ–π {product.name} :
                                    <input
                                        type="number"
                                        name="quantity"
                                        value={formData.quantity}
                                        onChange={handleChange}
                                        min="1"
                                        required
                                    />
                                </label>
                                <label>–¢—ä—Ä—Å–∏ –æ—Ñ–∏—Å –ø–æ –≥—Ä–∞–¥
                                    <input 
                                        type="text" 
                                        value={cityFilter} 
                                        onChange={handleCityFilterChange} 
                                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–æ—Ñ–∏—è" 
                                    />
                                </label>
                                <label>–û—Ñ–∏—Å –Ω–∞ –ï–∫–æ–Ω—Ç</label>
                                <select
                                    name="office"
                                    value={formData.address}
                                    onChange={handleChange}
                                    required
                                    >
                                    <option value="">–ò–∑–±–µ—Ä–∏ –æ—Ñ–∏—Å</option>
                                    {filteredOffices.length > 0 ? (
                                        filteredOffices.map((office) => (
                                            <option key={office.code} value={'–ò–º–µ –Ω–∞ –æ—Ñ–∏—Å–∞: ' + office.name + ' ; –ê–¥—Ä–µ—Å: ' + office.address.fullAddress}>
                                                {office.name || "–ù—è–º–∞ –∏–º–µ"} - {office.address.settlement?.name || office.address.fullAddress || "–ù—è–º–∞ –∞–¥—Ä–µ—Å"}
                                            </option>
                                        ))
                                    ) : (
                                        <option value="">–ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –æ—Ñ–∏—Å–∏</option>
                                    )}
                                </select>
                            </div>
                            <button type="submit">–ü–æ—Ä—ä—á–∞–π</button>
                        </form>
                    </div>
                </div>
            )}
        </section>
    );
};

export default ProductDetails;
